{
  "$schema": "https://biomejs.dev/schemas/2.2.0/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "files": {
    "ignoreUnknown": false
  },
  "formatter": {
    "enabled": false
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "nursery": {
        "noFloatingPromises": "error"
      },
      "complexity": {
        "noAdjacentSpacesInRegex": "error",
        "noArguments": "error",
        "noBannedTypes": "off",
        "noExtraBooleanCast": "error",
        "noImplicitCoercions": "error",
        "noUselessCatch": "error",
        "noUselessEscapeInRegex": "error",
        "noUselessTernary": "error",
        "noUselessTypeConstraint": "error",
        "useLiteralKeys": "error",
        "useOptionalChain": "warn"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "warn",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "noUnusedImports": "error",
        "noUnusedFunctionParameters": "error",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useValidTypeof": "error",
        "useYield": "error"
      },
      "style": {
        "noCommonJs": "error",
        "noNamespace": "off",
        "noNonNullAssertion": "warn",
        "useArrayLiterals": "error",
        "useAsConstAssertion": "error",
        "useCollapsedElseIf": "error",
        "useConsistentArrayType": {
          "level": "warn",
          "options": {
            "syntax": "generic"
          }
        },
        "useConst": "error",
        "noRestrictedImports": {
          "level": "error",
          "options": {
            "patterns": [
              {
                "group": ["../../**"],
                "message": "Importing from parent directories is not allowed."
              }
            ]
          }
        },
        "useComponentExportOnlyModules": {
          "options": {
            "allowConstantExport": true
          }
        },
        "useImportType": {
          "options": {
            "style": "inlineType"
          }
        }
      },
      "suspicious": {
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noConsole": "error",
        "noConstantBinaryExpressions": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateElseIf": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noExplicitAny": "off",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noIrregularWhitespace": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noSelfCompare": "error",
        "noShadowRestrictedNames": "warn",
        "noSparseArray": "error",
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "noUselessRegexBackrefs": "error",
        "noVar": "error",
        "noWith": "error",
        "useAwait": "off",
        "useGetterReturn": "error",
        "useNamespaceKeyword": "error",
        "useIterableCallbackReturn": "warn"
      }
    },
    "includes": [
      "**",
      "!**/dist",
      "!**/build",
      "!**/docs",
      "!**/*.md",
      "!**/routeTree.gen.ts",
      "!**/vitest.config.ts",
      "!**/setupTests.ts",
      "!**/vitest.shared.ts",
      "!**/vitest.workspace.ts",
      "!infrastructure/cdk/**",
      "!packages/server/.dependency-cruiser.cjs"
    ]
  },
  "javascript": {
    "globals": []
  },
  "overrides": [
    {
      "includes": ["packages/client/**/*.{ts,tsx,js,jsx}"],
      "linter": {
        "rules": {
          "a11y": {
            "useButtonType": "error"
          },
          "complexity": {
            "noUselessFragments": "error"
          },
          "correctness": {
            "noChildrenProp": "off",
            "useExhaustiveDependencies": "warn",
            "useHookAtTopLevel": "error",
            "useJsxKeyInIterable": "error",
            "noNestedComponentDefinitions": "warn"
          },
          "security": {
            "noDangerouslySetInnerHtmlWithChildren": "error"
          },
          "style": {
            "useFragmentSyntax": "off"
          },
          "suspicious": {
            "noArrayIndexKey": "warn",
            "noCommentText": "error",
            "noDuplicateJsxProps": "error"
          }
        }
      }
    },
    {
      "includes": ["packages/server/**/*.{ts,tsx,js,jsx}"],
      "linter": {
        "rules": {}
      }
    },
    {
      "includes": ["packages/{domain,database}/**/*.{ts,tsx,js,jsx}"],
      "linter": {
        "rules": {
          "style": {
            "noRestrictedImports": "off"
          }
        }
      }
    },
    {
      "includes": ["scripts/**/*.{ts,js,mjs}"],
      "linter": {
        "rules": {
          "suspicious": {
            "noConsole": "off"
          }
        }
      }
    }
  ],
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": "off"
      }
    }
  }
}
